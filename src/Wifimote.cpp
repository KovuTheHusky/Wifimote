/*
 * Wifimote.cpp
 *
 *  Created on: Dec 15, 2011
 *      Author: kovuthehusky
 */

#include "Arduino.h"
#include "Wifimote.h"

const int EMITTER_PIN = 13;
const int DETECTOR_PIN = 12;
const int DIODE_IN = 7;
const int DIODE_OUT = 8;
const int DETECTOR_OUT = 2;

const int PULSE = 25; // Pulse time in microseconds
const int WAIT = 10; // Wait time in microseconds

unsigned int cmd[][78] = {{0x0000, 0x006d, 0x0022, 0x0003, 0x00a9, 0x00a8, 0x0015, 0x003f, 0x0015, 0x003f, 0x0015, 0x003f, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x003f, 0x0015, 0x003f, 0x0015, 0x003f, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x003f, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0040, 0x0015, 0x0015, 0x0015, 0x003f, 0x0015, 0x003f, 0x0015, 0x003f, 0x0015, 0x003f, 0x0015, 0x003f, 0x0015, 0x003f, 0x0015, 0x0702, 0x00a9, 0x00a8, 0x0015, 0x0015, 0x0015, 0x0e6e},
{0x0000, 0x006d, 0x0022, 0x0003, 0x00a9, 0x00a8, 0x0015, 0x003f, 0x0015, 0x003f, 0x0015, 0x003f, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x003f, 0x0015, 0x003f, 0x0015, 0x003f, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x003f, 0x0015, 0x003f, 0x0015, 0x003f, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x003f, 0x0015, 0x003f, 0x0015, 0x003f, 0x0015, 0x003f, 0x0015, 0x003f, 0x0015, 0x0702, 0x00a9, 0x00a8, 0x0015, 0x0015, 0x0015, 0x0e6e},
{0x0000, 0x006d, 0x0022, 0x0003, 0x00a9, 0x00a8, 0x0015, 0x003f, 0x0015, 0x003f, 0x0015, 0x003f, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x003f, 0x0015, 0x003f, 0x0015, 0x003f, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x003f, 0x0015, 0x003f, 0x0015, 0x0015, 0x0015, 0x003f, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x003f, 0x0015, 0x0015, 0x0015, 0x003f, 0x0015, 0x003f, 0x0015, 0x003f, 0x0015, 0x003f, 0x0015, 0x0702, 0x00a9, 0x00a8, 0x0015, 0x0015, 0x0015, 0x0e6e}
};

void on(int time) {
	//
}

void off(int time) {
	//
}

void setup() {
	pinMode(EMITTER_PIN, OUTPUT);
	pinMode(DETECTOR_PIN, OUTPUT);
	pinMode(DIODE_IN, OUTPUT);
	pinMode(DIODE_OUT, INPUT);
	pinMode(DETECTOR_OUT, INPUT);
	Serial.begin(9600);
	Serial.println("Press 1 for power, 2 for volume up, 3 for volume down, 4 for simple test, 5 for diode test, any other key for nothing...");
}

void loop() {

	if (Serial.available() > 0) {
		int in = Serial.read();
		int j = -1, k = -1;
		if (in == 49) {
			j = 0;
		} else if (in == 50) {
			j = 1;
		} else if (in == 51) {
			j = 2;
		} else if (in == 52) {
			k = 0;
		} else if (in == 53) {
			k = 1;
		}
		if (j != -1) {
			unsigned int raw = cmd[j][0];
			Serial.print("Is the data raw? ");
			Serial.println(1 - raw);
			unsigned int frequency = 1000000 / (cmd[j][1] * 0.241246);
			Serial.print("What is the frequency? ");
			Serial.println(frequency);
			unsigned int burst1 = cmd[j][2];
			Serial.print("How many in the first burst pattern? ");
			Serial.println(burst1);
			unsigned int burst2 = cmd[j][3];
			Serial.print("How many in the second burst pattern? ");
			Serial.println(burst2);
			for (int i = 4; i < 78; i++) {
				if (i % 2 == 0) {
					int scratch = cmd[j][i] * PULSE;
					while(scratch > PULSE) {
						digitalWrite(EMITTER_PIN, HIGH);
						delayMicroseconds(WAIT);
						digitalWrite(EMITTER_PIN, LOW);
						delayMicroseconds(WAIT);
						scratch = scratch - PULSE;
					}
				} else {
					delayMicroseconds(cmd[j][i] * PULSE);
				}
			}
		} else if (k != -1) {
			if (k == 0) {
				Serial.println("Trying the simple detector...");
				digitalWrite(DETECTOR_PIN, HIGH);
				for (int i = 0; i < 1000000; i++) {
					Serial.println(digitalRead(DETECTOR_OUT));
					delayMicroseconds(1);
				}
				Serial.println("Done trying the simple detector!");
			} else if (k == 1) {
				Serial.println("Trying the diode detector...");
				digitalWrite(DIODE_IN, HIGH);
				for (int i = 0; i < 1000000; i++) {
					Serial.println(digitalRead(DIODE_OUT));
					delayMicroseconds(1);
				}
				Serial.println("Done trying the diode detector!");
			}
		} else {
			Serial.println("Invalid key!");
		}
	}

}
